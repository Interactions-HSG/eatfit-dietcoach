# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-04 10:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('certainity', models.TextField()),
            ],
            options={
                'db_table': 'allergen',
                'verbose_name': 'Allergen',
                'verbose_name_plural': 'Allergens',
            },
        ),
        migrations.CreateModel(
            name='ImportLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('import_started', models.DateTimeField()),
                ('import_finished', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'import_log',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('lang', models.CharField(max_length=2)),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'ingredient',
                'verbose_name': 'ingridient',
                'verbose_name_plural': 'ingridients',
            },
        ),
        migrations.CreateModel(
            name='MajorCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, max_length=1024, null=True)),
                ('canonical_name', models.TextField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'major_category',
            },
        ),
        migrations.CreateModel(
            name='MinorCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, max_length=1024, null=True)),
                ('category_major', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NutritionService.MajorCategory')),
            ],
            options={
                'db_table': 'minor_category',
            },
        ),
        migrations.CreateModel(
            name='NotFoundLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('gtin', models.BigIntegerField()),
                ('count', models.BigIntegerField(default=1)),
                ('first_searched_for', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'not_found_log',
            },
        ),
        migrations.CreateModel(
            name='NutritionFact',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                'db_table': 'nutrition_fact',
                'verbose_name': 'NutritionFact',
                'verbose_name_plural': 'NutritionFacts',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('gtin', models.BigIntegerField()),
                ('product_name_en', models.TextField(blank=True, null=True)),
                ('product_name_de', models.TextField(blank=True, null=True)),
                ('product_name_fr', models.TextField(blank=True, null=True)),
                ('product_name_it', models.TextField(blank=True, null=True)),
                ('producer', models.TextField(blank=True, null=True)),
                ('product_size', models.CharField(blank=True, max_length=255, null=True)),
                ('product_size_unit_of_measure', models.CharField(blank=True, max_length=255, null=True)),
                ('serving_size', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'product_images')),
                ('original_image_url', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('major_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NutritionService.MajorCategory')),
                ('minor_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='NutritionService.MinorCategory')),
            ],
            options={
                'db_table': 'product',
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.AddField(
            model_name='nutritionfact',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutrition_facts', to='NutritionService.Product'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingridients', to='NutritionService.Product'),
        ),
        migrations.AddField(
            model_name='allergen',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergens', to='NutritionService.Product'),
        ),
    ]
